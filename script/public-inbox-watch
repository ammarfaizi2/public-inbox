#!/usr/bin/perl -w
# Copyright (C) 2016-2020 all contributors <meta@public-inbox.org>
# License: AGPL-3.0+ <https://www.gnu.org/licenses/agpl-3.0.txt>
my $help = <<EOF;
usage: public-inbox-watch

See public-inbox-watch(1) man page for full documentation.
EOF

use strict;
use Getopt::Long qw(:config gnu_getopt no_ignore_case auto_abbrev);
use IO::Handle; # ->autoflush
use PublicInbox::Watch;
use PublicInbox::Config;
use PublicInbox::DS;
use PublicInbox::Sigfd;
use PublicInbox::Syscall qw($SFD_NONBLOCK);
my $do_scan = 1;
GetOptions('scan!' => \$do_scan, # undocumented, testing only
	'help|h' => \(my $show_help)) or do { print STDERR $help; exit 1 };
if ($show_help) { print $help; exit 0 };
my $oldset = PublicInbox::Sigfd::block_signals();
STDOUT->autoflush(1);
STDERR->autoflush(1);
local $0 = $0; # local since this script may be eval-ed
my $watch = PublicInbox::Watch->new(PublicInbox::Config->new);
my $reload = sub {
	my $prev = $watch or return; # SIGQUIT issued
	$watch->quit;
	$watch = PublicInbox::Watch->new(PublicInbox::Config->new);
	if ($watch) {
		warn("I: reloaded\n");
	} else {
		warn("E: reloading failed\n");
		$watch = $prev;
	}
};

if ($watch) {
	my $scan = sub {
		return if !$watch;
		warn "I: scanning\n";
		$watch->trigger_scan('full');
	};
	my $quit = sub {
		$watch->quit if $watch;
		$watch = undef;
		$0 .= ' quitting';
	};
	my $sig = {
		HUP => $reload,
		USR1 => $scan,
		CHLD => \&PublicInbox::DS::enqueue_reap,
	};
	$sig->{QUIT} = $sig->{TERM} = $sig->{INT} = $quit;

	# --no-scan is only intended for testing atm, undocumented.
	PublicInbox::DS::requeue($scan) if $do_scan;

	my $sigfd = PublicInbox::Sigfd->new($sig, $SFD_NONBLOCK);
	local %SIG = (%SIG, %$sig) if !$sigfd;
	if (!$sigfd) {
		PublicInbox::Sigfd::set_sigmask($oldset);
		PublicInbox::DS->SetLoopTimeout(1000);
	}
	$watch->watch($sig, $oldset) while ($watch);
}
